global
   #Registering with SysLog: log <address> <syslog facility> [max level [min level]]
   log /dev/log   local0
   log /dev/log   local1 notice
   log 0.0.0.0   local0
   log 0.0.0.0   local1 notice

   stats timeout 30s
   daemon

   #Default SSL material locations
#   ca-base /etc/ssl/certs
#   crt-base /etc/ssl/private
   #Default ciphers to use on SSL-enabled listening sockets.
   #For more information, see ciphers(1SSL). This list is from:
   #https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
#   ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
#   ssl-default-bind-options no-sslv3

#*******************************************************************************
#        DEFAULT PROXY CONFIGURATION
#*******************************************************************************
defaults
#Note: This defaults section sets default parameters for all other sections following its declaration.
   log   global      # Desc: Enable per-instance logging of events and traffic.
   mode  http        #Desc: Set the running mode or protocol of the instance
               # http: layer-7 proxy mode, tcp: layer-4 proxy mode, health: 

   #Add 'x-forwarded-for' header.
   option forwardfor     #associated with <mode http> only, Desc: Enable insertion of the X-Forwarded-For header to requests sent to servers
   option   httplog           #associated with <mode http> only, Desc: Enable logging of HTTP request, session state and timers
   option   dontlognull
   retries  3
   option   redispatch

   option http-server-close # Desc: Enable or disable (prefix no + space + ...) HTTP connection closing on the server side

   timeout connect 5000    #ms
   timeout client  50000   #ms
   timeout server  50000   #ms
   #Long timeout for WebSocket connections.
   timeout tunnel 3h

   #Return a file contents instead of errors generated by HAProxy
   errorfile 400 /etc/haproxy/errors/400.http
   errorfile 403 /etc/haproxy/errors/403.http
   errorfile 408 /etc/haproxy/errors/408.http
   errorfile 500 /etc/haproxy/errors/500.http
   errorfile 502 /etc/haproxy/errors/502.http
   errorfile 503 /etc/haproxy/errors/503.http
   errorfile 504 /etc/haproxy/errors/504.http

#*******************************************************************************
#        FRONTEND PROXY CONFIGURATION
#*******************************************************************************
#'frontend' section describes a set of listening sockets accepting client connections.
frontend www 
  bind *:80
  mode http
  http-request del-header Origin
  http-request del-header Referer
  default_backend NodeServer
  
   #*******************************************************************************
   #  RAISE CONDITION - Route REST-based client requests to Lighttpd web-server
   #*******************************************************************************
   acl is_RestIndex   path_beg /
   acl is_RestWba     path_beg /rest

   #*******************************************************************************
   #  RAISE CONDITION - Route Web-Socket-based client requests to WebSocket server
   #*******************************************************************************
#   acl is_websocket hdr_end(Host) -i 127.0.0.1
#   acl is_websocket hdr_end(Host) -i 10.207.145.117
   acl is_websocket path_beg /socket.io
#   acl is_websocket hdr(Upgrade) -i webSocket
#   acl is_websocket hdr_beg(Host) -i ws

   #*******************************************************************************
   #  MAPPING of 'FRONTEND' and 'BACKEND' sections
   #*******************************************************************************
   #Lighttpd as Backend
   use_backend NodeServer if is_RestWba
   use_backend NodeServer if is_RestIndex !is_websocket

   #Web-Socket as Backend
   use_backend WebSocketServer if is_websocket

   #Default Server as Backend - Desc: Specify the backend to use when no 'use_backend' rule has been matched.
#   default_backend RestServer

#*******************************************************************************
#        BACKEND SERVERS
#*******************************************************************************
# 'backend' section describes a set of servers to which the proxy will connect to forward incoming connections.

#*******************************************************************************
#        LIGHTTPD BACKEND SERVER
#*******************************************************************************
backend RestServer
   timeout server 600s


backend NodeServer
   timeout connect 10s
   timeout server 1000s
   mode http
   server server2222 127.0.0.1:8001
   

   #Tell the backend that this is a secure connection, even though it's getting plain HTTP.
#   reqadd X-Forwarded-Proto: https

   #balance types 1.roundrobin – “Each server is used in turns, according to their weights.”
   #              2.leastconn – “The server with the lowest number of connections receives the connection.”
#   balance leastconn

   #Check by hitting a page intended for this use.
#   option httpchk GET /isrunning		# Desc: Enable HTTP protocol to check on the servers health

   #Wait 500ms between checks.
#   timeout check 500ms

   #Without Wait 500ms between checks.
#   server www1 10.207.145.117:443 check inter 500ms

   #server lighttpd 0.0.0.0:5001
   #server lighttpd 10.207.145.85:5001

#*******************************************************************************
#        WEB-SOCKET BACKEND SERVER
#*******************************************************************************
backend WebSocketServer
   #ALERT: Do not set X-Forwarded-For Option
   #option forwardfor
   timeout server 600s
   server Websocket 127.0.0.1:5000 weight 1 maxconn 1024 check
   

#*******************************************************************************
#        DISPLAY HAPROXY STATISTICS
#*******************************************************************************
#frontend stats
   #HTTPS only.
   #Example with CA certificate bundle
#   bind :1936 ssl crt cert.pem ca-file bundle.crt
   #Example without CA certification bunch
#   bind :1936 ssl crt cert.pem
#   default_backend stats

#backend stats
#   stats enable
#   stats hide-version
#   stats realm Haproxy Statistics
#   stats uri /
#   stats auth admin:password

#*******************************************************************************
#       END-OF-FILE
#*******************************************************************************


